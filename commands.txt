//vytvorenie Image s názvom vk-apache na základe Dockerfile s názvom Dockerfile-apache pričom
//základný kontext pre build je priečinok v ktorom sa nachádzam čo reprezentuje tá podka na konci
docker build -t vk-apache -f config/Dockerfile-apache .

//vytvorenie kontaneru z image vk-apache, namapovanie portov tak, že vnútorný port kontajenera 80
//sa presmeruje na vonkajsi port hostitela 8080, -d znamena, ze vystup s konzoli kontanera sa nebude zobrazovat
//v nasej konzole, cize nastane tzv. "detach"
docker run -d -p 8080:80 vk-apache

//spustenie kontajneru a okamzite pripojenie sa do konzoly bez moznosti vykonania CMD alebo ENTRYPOINT (apache2-foreground)
docker run -it -p 8080:80 vk-apache /bin/bash

//prístup cez SSH na existujúci bežiaci kontajner
docker exec -it trusting_shamir /bin/bash

//zobrazenie vsetkych beziacich kontajnerov
docker ps

//zobrazenie všetkých aj nebežiacich kontajnerov
docker ps -a

//zastavenie kontajnera s nazvom trusting_shamir
docker stop trusting_shamir

//vymazanie kontajnera s názvom trusting_shamir
docker rm trusting_shamir

//zobrzenie všetkých lokálnych images na disku
docker images

//vytvorenie volume s názvom mydata
docker volume create mydata

//spustenie kontajneru spolu s vytvorenou volume
docker run -d -p 8080:80 -v mydata:/var/www/html/data vk-apache

//zoznam volumes
docker volume ls

//detail o konkrétnej volume
docker volume inspect mydata

//vymazanie volume
docker volume rm mydata

//zobrazenie všetkých archívnych logov kontajnera
docker logs trusting_shamir

//zobrazenie logo v reálnom čase
docker logs -f trusting_shamir

//vytvorenie izolovanej siete
docker network create mynetwork

//vytvorenie kontajneru s nazvom web ktorý je pridelený do izolovanej siete mynetwork
docker run -d --network=mynetwork --name web vk-apache

//zoznam sieti
docker network ls

//detail siete mynetwork
docker network inspect mynetwork

//vymazanie siete
docker network rm mynetwork

//export image do TAR súboru
docker save vk-apache > vk-apache.tar

//import docker image z TAR súboru
docker load < vk-apache.tar